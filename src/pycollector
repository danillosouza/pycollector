#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
    File: pycollector
    Description: Collector wrapper/daemon.
"""

__software__ = "pycollector"
__desc__ = "Generic collector written in Python."
__version_info__ = ('0', '1', '7')
__version__ = '.'.join(__version_info__)

__author__ = "Ronald Kaiser"
__email__ = "ronald at intelie dot com dot br"


try:
    import sys, os
    src_dir = os.path.dirname(os.path.abspath(__file__))
    os.chdir(src_dir)
    sys.path.append(os.path.join(os.path.dirname(src_dir), 'conf'))
except Exception, e:
    print e
    exit(-1)


import optparse
import subprocess

from helpers import daemon
import daemon_util

import ascii
from rwtypes import rwtypes
import daemon_conf
from collector import Collector


DAEMON=True
SERVER=True


def disable_daemon(option, ospt, value, parser):
    global DAEMON
    DAEMON = False


def disable_server(option, opt, value, parser):
    global SERVER
    SERVER = False


def status(option, opt, value, parser):
    daemon_util.status()


def start(option, opt, value, parser):
    collector = Collector(daemon_conf, 
                          server=SERVER)
    daemon_util.start(collector, DAEMON)
    

def stop(option, opt, value, parser):
    daemon_util.stop()


def show_reader_types(option, opt, value, parser):
    keys = rwtypes.get_reader_keys()
    for key in keys:
        print "* %s" % key
    sys.exit(0)


def show_writer_types(option, opt, value, parser):
    keys = rwtypes.get_writer_keys()
    for key in keys:
        print "* %s" % key
    sys.exit(0)


if __name__ == '__main__':
    parser = optparse.OptionParser(prog=__software__, version=__version__)
    parser.set_description(__desc__)

    parser.add_option("--rtypes",
                      action="callback",
                      callback=show_reader_types,
                      nargs=0,
                      help="show reader types")

    parser.add_option("--wtypes",
                      action="callback",
                      callback=show_writer_types,
                      nargs=0,
                      help="show writer types")

    parser.add_option("--nodaemon",
                      action="callback",
                      callback=disable_daemon,
                      nargs=0,
                      help="enable collector to start without detaching the process")
    
    parser.add_option("--noserver",
                      action="callback",
                      callback=disable_server,
                      nargs=0,
                      help="disable default web server with realtime data")

    parser.add_option("--start",
                      action="callback",
                      callback=start,
                      nargs=0,
                      help="start collector")

    parser.add_option("--stop",
                      action="callback",
                      callback=stop,
                      nargs=0,
                      help="stop collector")

    parser.add_option("--status",
                      action="callback",
                      callback=status,
                      nargs=0,
                      help="check if collector is runnning.")

    if len(sys.argv) < 2:
        print ascii.ascii
        parser.print_help()
        sys.exit(0)
    elif '--help' in sys.argv:
        print ascii.ascii
    (options, args) = parser.parse_args()
