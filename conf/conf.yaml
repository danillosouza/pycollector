#
# File: conf.yaml
# Description: This file is read by pycollector to
#              configure readers/writers.
#              This file is supposed to be divided
#              in two sections: specs, conf
#
# specs: map names to specific configurations
#        Everything defined inside a spec is replaced where
#        it is being used (see conf section).
#
# conf:  List of pairs (reader, writer)
#        Since it is natural to have same specifications for readers/writers
#        it is encouraged to use specs.
#
#        A reader/writer must have a type.
#        A reader/writer may have a checkpoint path.
#        A reader/writer may present an interval (in seconds) property.
#
#


specs:
#Mysql example
#  lognitdb:
#    type: db
#    database: lognit
#    host: localhost
#    user: root
#    passwd: ''
#    connection: 'mysql+mysqldb://%s:%s@%s/%s'
#
#Sqlserver example
#  webradardb:
#    type: db
#    database: master
#    host: localhost\\sqlexpress
#    user: ''
#    passwd: ''
#    connection: 'mssql+pyodbc://%s:%s@%s/%s'
#
#Activemq example
#  activemq:
#    type: activemq
#    host: localhost 
#    port: 61613
#    destination: '/queue/events'
#
#Log example
#  log:
#    type: log
#    delimiter: '\t'
#    columns : [col1, col2]
#
#Gtalk example
#  gtalkbot:
#    type: gtalk
#    login: montypythonfoo
#    passwd: m0ntypyth0nf00
#    destination: raios.catodicos@gmail.com
#


conf:
#Reading from stdin and writing to stdout
#- reader:
#    type: stdin
#  writer:
#    type: stdout

#Reading from an nginx log and writing to activemq
#- reader:
#    type: azion_analytics
#    logpath: /var/log/nginx/sa/AZ.0058b.log
#    delimiter: \t
#    columns: [request_time, host, remote_addr, time_local, request, status, request_method, bytes_sent, request_uri, http_user_agent, http_referer, upstream_cache_status]
#    count:
#      request_method: ['GET', 1] #count GET's in 'request_method' column in 1 minute periods
#      status: ['200', 1]
#  writer:
#    spec: activemq
#    blockable: True
#    retry_interval: 5 
#    retry_timeout: 7200

#Reading from arduino and writing in file
#- reader:
#    type: arduino
#    interface: /dev/ttyUSB0
#    bps: 9600
#  writer:
#    type: file
#    filepath: /tmp/data

#Reading from your camera and writing to a jpg file
#- reader:
#    type: cam
#    cam_number: 2
#    interval: 5
#  writer:
#    path: /tmp/data
#    prefix: microsoftcam
#    type: cam
#
#- reader:
#    type: cam
#    cam_number: 1
#    interval: 60
#  writer:
#    path: /tmp/data
#    type: cam
#    prefix: cam

#Reading from a database and writing to activemq
#- reader:
#    queue_maxsize: 10
#    type: db
#    database: lognit
#    host: localhost
#    user: root
#    passwd: ''
#    connection: 'mysql+mysqldb://%s:%s@%s/%s'
#    interval: 5
#    query: select display_name, email from web_user
#    columns: [display_name, email]
#  writer: 
#    type: activemq
#    host: localhost
#    port: 61613
#    destination: '/queue/events'

#Reading from a log file and writing to activemq
#- reader:
#    queue_maxsize: 10
#    spec: log
#    logpath: '/tmp/test.log'
#  writer:
#    type: activemq
#    host: demo.intelie.net
#    port: 61613
#    destination: '/queue/events'

#Reading from stdin and writing to a file
#- reader:
#    type: stdin
#  writer:
#    type: file
#    filepath: /tmp/test.log

#Reading from stdin and writing to a gtalk account
#- reader:
#    type: stdin
#  writer:
#    type: gtalk
#    login: montypythonfoo
#    passwd: m0ntypyth0nf00
#    destination: raios.catodicos@gmail.com

